<body class="bodyStyle">

  <header class="header">
    <div class="header__top">
      <a href="/" class="header__logo" aria-label="logo">
        <img src="/images/logo.png" alt="Logo">
      </a>

      <form action="/search" method="get" class="header__search">
        <div class="autocomplete-container">
          <input name="search_product" type="text" id="search" placeholder="Tìm kiếm sản phẩm" autocomplete="off"
            style="outline: none;" />
          <div id="suggestions" class="suggestions-list" style="display:none"></div>
        </div>
        <div class="search-container">
          <button type="submit">
            <img style="height: 20px; width: 20px;" src="/icons/searchicon.png" alt="search">
          </button>
        </div>
      </form>

      <div class="header__actions">
        <form action="/login" method="get">
          <a class="header__icon">
            <button class="transparent-button"><img class="usericon" src="/icons/user.png" alt="Đăng nhập"></button>
          </a>
        </form>

        <form action="/cart" method="get">
          <a class="header__icon">
            <img src="/icons/cart.png" alt="Giỏ hàng">
            <button class="transparent-button">Giỏ hàng</button>
          </a>
        </form>
      </div>
    </div>
  </header>

  <script>
    let controller = null;
    let timeoutId = null;
    let searchResults = [];
    const searchInput = document.getElementById('search');
    const suggestions = document.getElementById('suggestions');
    let activeIndex = -1;
    const API_URL = "http://localhost:4000";

    searchInput.addEventListener('input', function (event) {
      const keyword = event.target.value;
      clearTimeout(timeoutId);
      timeoutId = setTimeout(() => {
        callSearchAPI(keyword);
      }, 300);
    });

    async function callSearchAPI(keyword) {
      if (!keyword.trim()) {
        closeSuggestions();
        return;
      }

      console.log(`Gọi API với keyword: ${keyword}`);

      if (controller) controller.abort();

      controller = new AbortController();
      const signal = controller.signal;

      fetch(`${API_URL}/search?keyword=${encodeURIComponent(keyword)}`, { signal })
        .then(response => response.json())
        .then(data => {
          if (signal.aborted) {
            console.log('Bỏ qua render vì request đã bị huỷ');
            return;
          }
          searchResults = data;
          showSuggestions(keyword);
        })
        .catch(error => {
          if (error.name === 'AbortError') {
            console.log('Request bị huỷ');
          } else {
            console.error('Lỗi:', error);
          }
        });
    }

    function closeSuggestions() {
      suggestions.innerHTML = '';
      suggestions.style.display = 'none';
      activeIndex = -1;
    }

    function highlightSuggestion(index) {
      const items = suggestions.querySelectorAll('.suggestion-item');
      items.forEach((item, i) => {
        item.classList.toggle('active', i === index);
      });
      activeIndex = index;
    }

    function selectSuggestion(productItem) {
      window.location.href = `/product/${productItem.id}`;
      closeSuggestions();
    }

    function showSuggestions(value) {
      if (!value.trim()) {
        closeSuggestions();
        return;
      }
      if (searchResults.length === 0) {
        closeSuggestions();
        return;
      }

      suggestions.innerHTML = ''; // Xoá gợi ý cũ

      searchResults.forEach((item) => {
        const div = document.createElement('div');
        div.classList.add('suggestion-item');
        div.innerHTML = `
      <div style="display: flex; align-items: center;">
        <img src="${item.img}" alt="${item.ten}" style="width: 40px; height: 40px; object-fit: cover; margin-right: 8px; border-radius: 4px;">
        <div>
          <div style="font-weight: bold;">${item.ten}</div>
          <div style="color: gray; font-size: 12px;">${formatPriceFromString(item.gia)}</div>
        </div>
      </div>
    `;
        div.addEventListener('mousedown', (e) => {
          e.preventDefault();
          selectSuggestion(item);
        });
        suggestions.appendChild(div);
      });

      suggestions.style.display = 'block';
    }

    function formatPriceFromString(priceStr) {
      const number = parseInt(priceStr.replace(/\./g, ''), 10);
      return number.toLocaleString('vi-VN') + ' ₫';
    }

    document.addEventListener('click', (e) => {
      if (!e.target.closest('.autocomplete-container') && e.target !== searchInput) {
        closeSuggestions();
      }
    });

    // searchInput.addEventListener('keydown', (e) => {
    //   const items = suggestions.querySelectorAll('.suggestion-item');
    //   if (items.length === 0) return;

    //   if (e.key === 'ArrowDown') {
    //     e.preventDefault();
    //     activeIndex = (activeIndex + 1) % items.length;
    //     highlightSuggestion(activeIndex);
    //   } else if (e.key === 'ArrowUp') {
    //     e.preventDefault();
    //     activeIndex = (activeIndex - 1 + items.length) % items.length;
    //     highlightSuggestion(activeIndex);
    //   } else if (e.key === 'Enter') {
    //     if (activeIndex > -1) {
    //       e.preventDefault();
    //       selectSuggestion(items[activeIndex].textContent);
    //     } else {
    //       closeSuggestions();
    //     }
    //   } else if (e.key === 'Escape') {
    //     closeSuggestions();
    //   }
    // });
  </script>