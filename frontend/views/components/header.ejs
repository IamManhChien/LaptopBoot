

<body class="bodyStyle">

  <header class="header">
    <div class="header__top">
      <a href="/" class="header__logo" aria-label="logo">
        <img src="/images/logo.png" alt="Logo">
      </a>

      <form action="/search" method="get" class="header__search">
        <div class="autocomplete-container">
          <input type="text" id="search" placeholder="Tìm kiếm sản phẩm" autocomplete="off" style="outline: none;" />
          <div id="suggestions" class="suggestions-list" style="display:none"></div>
        </div>
        <div class="search-container">
          <button type="submit">
            <img style="height: 20px; width: 20px;" src="/icons/searchicon.png" alt="search">
          </button>
        </div>
      </form>

      <div class="header__actions">
        <form action="/login" method="get">
        <a  class="header__icon">
          <button class="transparent-button"><img class="usericon" src="/icons/user.png" alt="Đăng nhập"></button>
        </a>
        </form>

        <form action="/cart" method="get">
        <a class="header__icon">
          <img src="/icons/cart.png" alt="Giỏ hàng">
          <button class="transparent-button">Giỏ hàng</button>
        </a>
        </form>
      </div>
    </div>
  </header>

<script>
  const pcs = <%- JSON.stringify(typeof pcs !== 'undefined' ? pcs : []) %>;
  const cameras = <%- JSON.stringify(typeof cameras !== 'undefined' ? cameras : []) %>;

  const combinedItems = [
      ...pcs.map(item => item.ten),
      ...cameras.map(item => item.ten)
    ];
  const searchInput = document.getElementById('search');
  const suggestions = document.getElementById('suggestions');
  let activeIndex = -1;
  function closeSuggestions() {
    suggestions.innerHTML = '';
    suggestions.style.display = 'none';
    activeIndex = -1;
  }

  function highlightSuggestion(index) {
    const items = suggestions.querySelectorAll('.suggestion-item');
    items.forEach((item, i) => {
      item.classList.toggle('active', i === index);
    });
    activeIndex = index;
  }
  function selectSuggestion(text) {
    searchInput.value = text;
    closeSuggestions();
  }

  function showSuggestions(value) {
    closeSuggestions();
    if (!value.trim()) return;
    const filtered = combinedItems.filter(item => 
      item.toLowerCase().includes(value.toLowerCase())
    );
    if (filtered.length === 0) return;
    filtered.forEach((item, index) => {
      const div = document.createElement('div');
      div.classList.add('suggestion-item');
      div.textContent = item;
      div.addEventListener('mousedown', e => {
        e.preventDefault();
        selectSuggestion(item);
      });
      suggestions.appendChild(div);
    });
    suggestions.style.display = 'block';
  }

    searchInput.addEventListener('input', (e) => {
    showSuggestions(e.target.value);
  });
  searchInput.addEventListener('keydown', (e) => {
    const items = suggestions.querySelectorAll('.suggestion-item');
    if (items.length === 0) return;
    if (e.key === 'ArrowDown') {
      e.preventDefault();
      activeIndex = (activeIndex + 1) % items.length;
      highlightSuggestion(activeIndex);
    } else if (e.key === 'ArrowUp') {
      e.preventDefault();
      activeIndex = (activeIndex - 1 + items.length) % items.length;
      highlightSuggestion(activeIndex);
    } else if (e.key === 'Enter') {
      e.preventDefault();
      if (activeIndex > -1) {
        selectSuggestion(items[activeIndex].textContent);
      } else {
        closeSuggestions();
      }
    } else if (e.key === 'Escape') {
      closeSuggestions();
    }
  });

  document.addEventListener('click', (e) => {
    if (!e.target.closest('.autocomplete-container')) {
      closeSuggestions();
    }
  });
</script>